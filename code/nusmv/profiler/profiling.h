/*!
  \author Sergio Mover
  \brief Api of the profiler library.

  Library for profiling BMC executions.
*/

#ifndef BMC_PROFILING_LIBRARY_H
#define BMC_PROFILING_LIBRARY_H

/*---------------------------------------------------------------------------*/
/* Constant declarations                                                     */
/*---------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------*/
/* Type declarations                                                         */
/*---------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------*/
/* Structure declarations                                                    */
/*---------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------*/
/* Variable declarations                                                     */
/*---------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------*/
/* Macro declarations                                                        */
/*---------------------------------------------------------------------------*/


/**AutomaticStart*************************************************************/

/*---------------------------------------------------------------------------*/
/* Function prototypes                                                       */
/*---------------------------------------------------------------------------*/

void profiler_enable(char* file_name);
void profiler_disable(void);
void profiler_initialize(void);
void profiler_sampling(int id);
void profiler_output_message(const char* msg, const int bmc_step);

/**AutomaticEnd***************************************************************/

#endif /* BMC_PROFILING_LIBRARY_H */
